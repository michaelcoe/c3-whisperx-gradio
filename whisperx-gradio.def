Bootstrap: docker
From: nvidia/cuda:12.9.1-cudnn-runtime-ubuntu24.04

%files
    app.py /app/app.py
    requirements.txt /app/requirements.txt

%environment
    # OMPI Environment
    # Point to OMPI binaries, libraries, man pages
    export OMPI_DIR=/opt/ompi
    export PATH="$OMPI_DIR/bin:$PATH"
    export LD_LIBRARY_PATH="$OMPI_DIR/lib:$LD_LIBRARY_PATH"
    export MANPATH="$OMPI_DIR/share/man:$MANPATH"

    # Gradio Python App Environment
    export DEBIAN_FRONTEND=noninteractive
    export PYTHONUNBUFFERED=1
    export PYTHONDONTWRITEBYTECODE=1
    # Disable Triton compilation
    export NO_TORCH_COMPILE=1
    # export the virtual environment path
    export PATH="/app/venv/bin:$PATH"

%post -c bin/bash
    echo "Installing required packages..."
    apt-get update && apt-get install -y wget git bash gcc gfortran g++ make file bzip2 \
        curl ffmpeg python3-pip python3-dev python3-venv
    
    apt-get clean && rm -rf /var/lib/apt/lists/*

    # echo "Installing Open MPI"
    # export OMPI_DIR=/opt/ompi
    # export OMPI_VERSION=5.0.3
    # export OMPI_URL="https://download.open-mpi.org/release/open-mpi/v5.0/openmpi-$OMPI_VERSION.tar.bz2"
    # mkdir -p /tmp/ompi
    # mkdir -p /opt
    # # Download
    # cd /tmp/ompi && wget -O openmpi-$OMPI_VERSION.tar.bz2 $OMPI_URL && tar -xjf openmpi-$OMPI_VERSION.tar.bz2
    # # Compile and install
    # cd /tmp/ompi/openmpi-$OMPI_VERSION && ./configure --prefix=$OMPI_DIR && make -j$(nproc) install

    echo "Installing Gradio app requirements"
    cd /app
    
    # Set up a Python virtual environment
    python3 -m venv /app/venv
    source /app/venv/bin/activate

    # Create output directory
    mkdir -p /app/whisperx_output

    pip install -r requirements.txt

%runscript
    exec /app/venv/bin/python "/app/app.py"